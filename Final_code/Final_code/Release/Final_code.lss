
Final_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  0000026e  00000302  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000026e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800128  00800128  0000032a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000032a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000035c  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  0000039c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000f32  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00001066  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e6       	ldi	r30, 0x6E	; 110
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e2       	ldi	r26, 0x28	; 40
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 33       	cpi	r26, 0x34	; 52
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <main>
  9e:	0c 94 35 01 	jmp	0x26a	; 0x26a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <gripper_setup>:
  a6:	8a b1       	in	r24, 0x0a	; 10
  a8:	84 61       	ori	r24, 0x14	; 20
  aa:	8a b9       	out	0x0a, r24	; 10
  ac:	08 95       	ret

000000ae <uartInit>:
  ae:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  b2:	83 e0       	ldi	r24, 0x03	; 3
  b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  b8:	88 e9       	ldi	r24, 0x98	; 152
  ba:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  be:	86 e0       	ldi	r24, 0x06	; 6
  c0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  c4:	51 9a       	sbi	0x0a, 1	; 10
  c6:	50 98       	cbi	0x0a, 0	; 10
  c8:	08 95       	ret

000000ca <btn_state>:
  ca:	4b 9b       	sbis	0x09, 3	; 9
  cc:	fe cf       	rjmp	.-4      	; 0xca <btn_state>
  ce:	2f ef       	ldi	r18, 0xFF	; 255
  d0:	80 e7       	ldi	r24, 0x70	; 112
  d2:	92 e0       	ldi	r25, 0x02	; 2
  d4:	21 50       	subi	r18, 0x01	; 1
  d6:	80 40       	sbci	r24, 0x00	; 0
  d8:	90 40       	sbci	r25, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <btn_state+0xa>
  dc:	00 c0       	rjmp	.+0      	; 0xde <btn_state+0x14>
  de:	00 00       	nop
  e0:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
  e4:	8f 5f       	subi	r24, 0xFF	; 255
  e6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
  ea:	08 95       	ret

000000ec <USART_Transmit>:
  ec:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  f0:	95 ff       	sbrs	r25, 5
  f2:	fc cf       	rjmp	.-8      	; 0xec <USART_Transmit>
  f4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  f8:	08 95       	ret

000000fa <USART_Transmit_String>:
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	ec 01       	movw	r28, r24
 100:	89 91       	ld	r24, Y+
 102:	88 23       	and	r24, r24
 104:	19 f0       	breq	.+6      	; 0x10c <USART_Transmit_String+0x12>
 106:	0e 94 76 00 	call	0xec	; 0xec <USART_Transmit>
 10a:	fa cf       	rjmp	.-12     	; 0x100 <USART_Transmit_String+0x6>
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <gripper_opening>:
 112:	5c 9a       	sbi	0x0b, 4	; 11
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 11c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 120:	82 17       	cp	r24, r18
 122:	93 07       	cpc	r25, r19
 124:	64 f4       	brge	.+24     	; 0x13e <gripper_opening+0x2c>
 126:	5a 9a       	sbi	0x0b, 2	; 11
 128:	25 e8       	ldi	r18, 0x85	; 133
 12a:	2a 95       	dec	r18
 12c:	f1 f7       	brne	.-4      	; 0x12a <gripper_opening+0x18>
 12e:	00 00       	nop
 130:	5a 98       	cbi	0x0b, 2	; 11
 132:	25 e8       	ldi	r18, 0x85	; 133
 134:	2a 95       	dec	r18
 136:	f1 f7       	brne	.-4      	; 0x134 <gripper_opening+0x22>
 138:	00 00       	nop
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	ed cf       	rjmp	.-38     	; 0x118 <gripper_opening+0x6>
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	0c 94 7d 00 	jmp	0xfa	; 0xfa <USART_Transmit_String>

00000146 <gripper_closing>:
 146:	5c 98       	cbi	0x0b, 4	; 11
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 150:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 154:	82 17       	cp	r24, r18
 156:	93 07       	cpc	r25, r19
 158:	64 f4       	brge	.+24     	; 0x172 <gripper_closing+0x2c>
 15a:	5a 9a       	sbi	0x0b, 2	; 11
 15c:	25 e8       	ldi	r18, 0x85	; 133
 15e:	2a 95       	dec	r18
 160:	f1 f7       	brne	.-4      	; 0x15e <gripper_closing+0x18>
 162:	00 00       	nop
 164:	5a 98       	cbi	0x0b, 2	; 11
 166:	25 e8       	ldi	r18, 0x85	; 133
 168:	2a 95       	dec	r18
 16a:	f1 f7       	brne	.-4      	; 0x168 <gripper_closing+0x22>
 16c:	00 00       	nop
 16e:	01 96       	adiw	r24, 0x01	; 1
 170:	ed cf       	rjmp	.-38     	; 0x14c <gripper_closing+0x6>
 172:	83 e1       	ldi	r24, 0x13	; 19
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	0c 94 7d 00 	jmp	0xfa	; 0xfa <USART_Transmit_String>

0000017a <__vector_18>:
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	ef 93       	push	r30
 18a:	ff 93       	push	r31
 18c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 190:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <indx>
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	9e 0f       	add	r25, r30
 198:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <indx>
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	e6 5d       	subi	r30, 0xD6	; 214
 1a0:	fe 4f       	sbci	r31, 0xFE	; 254
 1a2:	80 83       	st	Z, r24
 1a4:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <indx>
 1a8:	8a 30       	cpi	r24, 0x0A	; 10
 1aa:	10 f0       	brcs	.+4      	; 0x1b0 <__vector_18+0x36>
 1ac:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <indx>
 1b0:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <indx>
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	e6 5d       	subi	r30, 0xD6	; 214
 1b8:	fe 4f       	sbci	r31, 0xFE	; 254
 1ba:	10 82       	st	Z, r1
 1bc:	ff 91       	pop	r31
 1be:	ef 91       	pop	r30
 1c0:	9f 91       	pop	r25
 1c2:	8f 91       	pop	r24
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <main>:
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	2a 97       	sbiw	r28, 0x0a	; 10
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
 1e2:	0e 94 53 00 	call	0xa6	; 0xa6 <gripper_setup>
 1e6:	0e 94 57 00 	call	0xae	; 0xae <uartInit>
 1ea:	78 94       	sei
 1ec:	6a e2       	ldi	r22, 0x2A	; 42
 1ee:	71 e0       	ldi	r23, 0x01	; 1
 1f0:	ce 01       	movw	r24, r28
 1f2:	01 96       	adiw	r24, 0x01	; 1
 1f4:	0e 94 2e 01 	call	0x25c	; 0x25c <strcpy>
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	88 23       	and	r24, r24
 1fc:	b9 f3       	breq	.-18     	; 0x1ec <main+0x1e>
 1fe:	0a e0       	ldi	r16, 0x0A	; 10
 200:	10 e0       	ldi	r17, 0x00	; 0
 202:	84 e2       	ldi	r24, 0x24	; 36
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	0e 94 7d 00 	call	0xfa	; 0xfa <USART_Transmit_String>
 20a:	2f ef       	ldi	r18, 0xFF	; 255
 20c:	80 e7       	ldi	r24, 0x70	; 112
 20e:	92 e0       	ldi	r25, 0x02	; 2
 210:	21 50       	subi	r18, 0x01	; 1
 212:	80 40       	sbci	r24, 0x00	; 0
 214:	90 40       	sbci	r25, 0x00	; 0
 216:	e1 f7       	brne	.-8      	; 0x210 <main+0x42>
 218:	00 c0       	rjmp	.+0      	; 0x21a <main+0x4c>
 21a:	00 00       	nop
 21c:	01 50       	subi	r16, 0x01	; 1
 21e:	11 09       	sbc	r17, r1
 220:	81 f7       	brne	.-32     	; 0x202 <main+0x34>
 222:	0e 94 65 00 	call	0xca	; 0xca <btn_state>
 226:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 22a:	81 30       	cpi	r24, 0x01	; 1
 22c:	81 f4       	brne	.+32     	; 0x24e <main+0x80>
 22e:	0e 94 89 00 	call	0x112	; 0x112 <gripper_opening>
 232:	8f ec       	ldi	r24, 0xCF	; 207
 234:	97 e0       	ldi	r25, 0x07	; 7
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <main+0x68>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0x6e>
 23c:	00 00       	nop
 23e:	0e 94 65 00 	call	0xca	; 0xca <btn_state>
 242:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 246:	82 30       	cpi	r24, 0x02	; 2
 248:	11 f4       	brne	.+4      	; 0x24e <main+0x80>
 24a:	0e 94 a3 00 	call	0x146	; 0x146 <gripper_closing>
 24e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 252:	82 30       	cpi	r24, 0x02	; 2
 254:	59 f6       	brne	.-106    	; 0x1ec <main+0x1e>
 256:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__data_end>
 25a:	c8 cf       	rjmp	.-112    	; 0x1ec <main+0x1e>

0000025c <strcpy>:
 25c:	fb 01       	movw	r30, r22
 25e:	dc 01       	movw	r26, r24
 260:	01 90       	ld	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	00 20       	and	r0, r0
 266:	e1 f7       	brne	.-8      	; 0x260 <strcpy+0x4>
 268:	08 95       	ret

0000026a <_exit>:
 26a:	f8 94       	cli

0000026c <__stop_program>:
 26c:	ff cf       	rjmp	.-2      	; 0x26c <__stop_program>
