
SimpleOLED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000954  000009e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000954  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800122  00800122  00000a0a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a0a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014af  00000000  00000000  00000b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000951  00000000  00000000  0000203b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009d4  00000000  00000000  0000298c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  00003360  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000533  00000000  00000000  000035f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000be8  00000000  00000000  00003b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004713  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8c 01 	jmp	0x318	; 0x318 <__ctors_end>
   4:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
   8:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
   c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  10:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  14:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  18:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  1c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  20:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  24:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  28:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  2c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  30:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  34:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  38:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  3c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  40:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  44:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  48:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  4c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  50:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  54:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  58:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  5c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  60:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>
  64:	0c 94 a9 01 	jmp	0x352	; 0x352 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	bc 5f       	subi	r27, 0xFC	; 252
  6a:	9c 60       	ori	r25, 0x0C	; 12
  6c:	a4 61       	ori	r26, 0x14	; 20
  6e:	84 62       	ori	r24, 0x24	; 36
  70:	b6 63       	ori	r27, 0x36	; 54
  72:	96 64       	ori	r25, 0x46	; 70
  74:	b0 65       	ori	r27, 0x50	; 80
  76:	9f 66       	ori	r25, 0x6F	; 111
  78:	b5 67       	ori	r27, 0x75	; 117
  7a:	89 68       	ori	r24, 0x89	; 137
  7c:	a9 69       	ori	r26, 0x99	; 153
  7e:	ff ff       	.word	0xffff	; ????

00000080 <ssd1306oled_font>:
	...
  88:	00 2f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14     ./..............
  98:	00 24 2a 7f 2a 12 00 62 64 08 13 23 00 36 49 55     .$*.*..bd..#.6IU
  a8:	22 50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00     "P........."A...
  b8:	41 22 1c 00 00 14 08 3e 08 14 00 08 08 3e 08 08     A".....>.....>..
  c8:	00 00 00 a0 60 00 00 08 08 08 08 08 00 00 60 60     ....`.........``
  d8:	00 00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00     ... .....>QIE>..
  e8:	42 7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31     B.@..BaQIF.!AEK1
  f8:	00 18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49     .......'EEE9.<JI
 108:	49 30 00 01 71 09 05 03 00 36 49 49 49 36 00 06     I0..q....6III6..
 118:	49 49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00     II)...66....V6..
 128:	00 08 14 22 41 00 00 14 14 14 14 14 00 00 41 22     ..."A.........A"
 138:	14 08 00 02 01 51 09 06 00 32 49 59 51 3e 00 7c     .....Q...2IYQ>.|
 148:	12 11 12 7c 00 7f 49 49 49 36 00 3e 41 41 41 22     ...|..III6.>AAA"
 158:	00 7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09     ..AA"...IIIA....
 168:	09 01 00 3e 41 49 49 7a 00 7f 08 08 08 7f 00 00     ...>AIIz........
 178:	41 7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41     A.A.. @A?....."A
 188:	00 7f 40 40 40 40 00 7f 02 0c 02 7f 00 7f 04 08     ..@@@@..........
 198:	10 7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e     ...>AAA>.......>
 1a8:	41 51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31     AQ!^....)F.FIII1
 1b8:	00 01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40     .......?@@@?.. @
 1c8:	20 1f 00 3f 40 38 40 3f 00 63 14 08 14 63 00 07      ..?@8@?.c...c..
 1d8:	08 70 08 07 00 61 51 49 45 43 00 00 7f 41 41 00     .p...aQIEC...AA.
 1e8:	00 55 2a 55 2a 55 00 00 41 41 7f 00 00 04 02 01     .U*U*U..AA......
 1f8:	02 04 00 40 40 40 40 40 00 00 01 02 04 00 00 20     ...@@@@@....... 
 208:	54 54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20     TTTx..HDD8.8DDD 
 218:	00 38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09     .8DDH..8TTT...~.
 228:	01 02 00 18 a4 a4 a4 7c 00 7f 08 04 04 78 00 00     .......|.....x..
 238:	44 7d 40 00 00 40 80 84 7d 00 00 7f 10 28 44 00     D}@..@..}....(D.
 248:	00 00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04     ..A.@..|...x.|..
 258:	04 78 00 38 44 44 44 38 00 fc 24 24 24 18 00 18     .x.8DDD8..$$$...
 268:	24 24 18 fc 00 7c 08 04 04 08 00 48 54 54 54 20     $$...|.....HTTT 
 278:	00 04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40     ..?D@ .<@@ |.. @
 288:	20 1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 1c      ..<@0@<.D(.(D..
 298:	a0 a0 a0 7c 00 44 64 54 4c 44 00 00 08 77 41 00     ...|.DdTLD...wA.
 2a8:	00 00 00 63 00 00 00 00 41 77 08 00 00 08 04 08     ...c....Aw......
 2b8:	08 04 00 3a 40 40 20 7a 00 3d 40 40 40 3d 00 21     ...:@@ z.=@@@=.!
 2c8:	54 54 54 79 00 7d 12 11 12 7d 00 39 44 44 44 39     TTTy.}...}.9DDD9
 2d8:	00 3d 42 42 42 3d 00 02 05 02 00 00 00 7e 01 49     .=BBB=.......~.I
 2e8:	55 73 00 7c 10 10 08 1c 00 30 48 20 48 30 00 5c     Us.|.....0H H0.\
 2f8:	62 02 62 5c                                         b.b\

000002fc <init_sequence>:
 2fc:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
 30c:	00 d5 f0 d9 22 da 12 db 20 8d 14 00                 ...."... ...

00000318 <__ctors_end>:
 318:	11 24       	eor	r1, r1
 31a:	1f be       	out	0x3f, r1	; 63
 31c:	cf ef       	ldi	r28, 0xFF	; 255
 31e:	d8 e0       	ldi	r29, 0x08	; 8
 320:	de bf       	out	0x3e, r29	; 62
 322:	cd bf       	out	0x3d, r28	; 61

00000324 <__do_copy_data>:
 324:	11 e0       	ldi	r17, 0x01	; 1
 326:	a0 e0       	ldi	r26, 0x00	; 0
 328:	b1 e0       	ldi	r27, 0x01	; 1
 32a:	e4 e5       	ldi	r30, 0x54	; 84
 32c:	f9 e0       	ldi	r31, 0x09	; 9
 32e:	02 c0       	rjmp	.+4      	; 0x334 <__do_copy_data+0x10>
 330:	05 90       	lpm	r0, Z+
 332:	0d 92       	st	X+, r0
 334:	a2 32       	cpi	r26, 0x22	; 34
 336:	b1 07       	cpc	r27, r17
 338:	d9 f7       	brne	.-10     	; 0x330 <__do_copy_data+0xc>

0000033a <__do_clear_bss>:
 33a:	21 e0       	ldi	r18, 0x01	; 1
 33c:	a2 e2       	ldi	r26, 0x22	; 34
 33e:	b1 e0       	ldi	r27, 0x01	; 1
 340:	01 c0       	rjmp	.+2      	; 0x344 <.do_clear_bss_start>

00000342 <.do_clear_bss_loop>:
 342:	1d 92       	st	X+, r1

00000344 <.do_clear_bss_start>:
 344:	a5 32       	cpi	r26, 0x25	; 37
 346:	b2 07       	cpc	r27, r18
 348:	e1 f7       	brne	.-8      	; 0x342 <.do_clear_bss_loop>
 34a:	0e 94 89 04 	call	0x912	; 0x912 <main>
 34e:	0c 94 a8 04 	jmp	0x950	; 0x950 <_exit>

00000352 <__bad_interrupt>:
 352:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000356 <i2c_init>:
            break;
        case 64:
            TWSR = 0x3;
            break;
        default:
            TWSR = 0x00;
 356:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
            break;
    }
    TWBR = (uint8_t)SET_TWBR;
 35a:	88 e4       	ldi	r24, 0x48	; 72
 35c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    // enable
    TWCR = (1 << TWEN);
 360:	84 e0       	ldi	r24, 0x04	; 4
 362:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 366:	08 95       	ret

00000368 <i2c_start>:
 
 Return Value: none
 **********************************************/
void i2c_start(uint8_t i2c_addr){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
 368:	94 ea       	ldi	r25, 0xA4	; 164
 36a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	uint16_t timeout = F_CPU/F_I2C*2.0;
 36e:	20 e4       	ldi	r18, 0x40	; 64
 370:	31 e0       	ldi	r19, 0x01	; 1
    while((TWCR & (1 << TWINT)) == 0 &&
 372:	09 c0       	rjmp	.+18     	; 0x386 <i2c_start+0x1e>
		timeout !=0){
		timeout--;
 374:	21 50       	subi	r18, 0x01	; 1
 376:	31 09       	sbc	r19, r1
		if(timeout == 0){
 378:	31 f4       	brne	.+12     	; 0x386 <i2c_start+0x1e>
			I2C_ErrorCode |= (1 << I2C_START);
 37a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_ErrorCode>
 37e:	81 60       	ori	r24, 0x01	; 1
 380:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <I2C_ErrorCode>
			return;
 384:	08 95       	ret
 **********************************************/
void i2c_start(uint8_t i2c_addr){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
	uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
 386:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 38a:	99 23       	and	r25, r25
 38c:	1c f0       	brlt	.+6      	; 0x394 <i2c_start+0x2c>
 38e:	21 15       	cp	r18, r1
 390:	31 05       	cpc	r19, r1
 392:	81 f7       	brne	.-32     	; 0x374 <i2c_start+0xc>
			I2C_ErrorCode |= (1 << I2C_START);
			return;
		}
	};
    // send adress
    TWDR = i2c_addr;
 394:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    TWCR = (1 << TWINT)|( 1 << TWEN);
 398:	84 e8       	ldi	r24, 0x84	; 132
 39a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    timeout = F_CPU/F_I2C*2.0;
 39e:	80 e4       	ldi	r24, 0x40	; 64
 3a0:	91 e0       	ldi	r25, 0x01	; 1
    while((TWCR & (1 << TWINT)) == 0 &&
 3a2:	08 c0       	rjmp	.+16     	; 0x3b4 <i2c_start+0x4c>
		  timeout !=0){
		timeout--;
 3a4:	01 97       	sbiw	r24, 0x01	; 1
		if(timeout == 0){
 3a6:	31 f4       	brne	.+12     	; 0x3b4 <i2c_start+0x4c>
			I2C_ErrorCode |= (1 << I2C_SENDADRESS);
 3a8:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_ErrorCode>
 3ac:	82 60       	ori	r24, 0x02	; 2
 3ae:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <I2C_ErrorCode>
			return;
 3b2:	08 95       	ret
	};
    // send adress
    TWDR = i2c_addr;
    TWCR = (1 << TWINT)|( 1 << TWEN);
    timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
 3b4:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3b8:	22 23       	and	r18, r18
 3ba:	14 f0       	brlt	.+4      	; 0x3c0 <i2c_start+0x58>
 3bc:	00 97       	sbiw	r24, 0x00	; 0
 3be:	91 f7       	brne	.-28     	; 0x3a4 <i2c_start+0x3c>
 3c0:	08 95       	ret

000003c2 <i2c_stop>:
 
 Return Value: none
 **********************************************/
void i2c_stop(void){
    // i2c stop
    TWCR = (1 << TWINT)|(1 << TWSTO)|(1 << TWEN);
 3c2:	84 e9       	ldi	r24, 0x94	; 148
 3c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3c8:	08 95       	ret

000003ca <i2c_byte>:
 - uint8_t byte: Byte to send to reciever
 
 Return Value: none
 **********************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
 3ca:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    TWCR = (1 << TWINT)|( 1 << TWEN);
 3ce:	84 e8       	ldi	r24, 0x84	; 132
 3d0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    uint16_t timeout = F_CPU/F_I2C*2.0;
 3d4:	80 e4       	ldi	r24, 0x40	; 64
 3d6:	91 e0       	ldi	r25, 0x01	; 1
    while((TWCR & (1 << TWINT)) == 0 &&
 3d8:	08 c0       	rjmp	.+16     	; 0x3ea <i2c_byte+0x20>
		  timeout !=0){
		timeout--;
 3da:	01 97       	sbiw	r24, 0x01	; 1
		if(timeout == 0){
 3dc:	31 f4       	brne	.+12     	; 0x3ea <i2c_byte+0x20>
			I2C_ErrorCode |= (1 << I2C_BYTE);
 3de:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_ErrorCode>
 3e2:	84 60       	ori	r24, 0x04	; 4
 3e4:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <I2C_ErrorCode>
			return;
 3e8:	08 95       	ret
 **********************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
    TWCR = (1 << TWINT)|( 1 << TWEN);
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
 3ea:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3ee:	22 23       	and	r18, r18
 3f0:	14 f0       	brlt	.+4      	; 0x3f6 <i2c_byte+0x2c>
 3f2:	00 97       	sbiw	r24, 0x00	; 0
 3f4:	91 f7       	brne	.-28     	; 0x3da <i2c_byte+0x10>
 3f6:	08 95       	ret

000003f8 <lcd_command>:
			lcd_command(command, sizeof(command));
		default:
			// do nothing
			break;
	}
}
 3f8:	0f 93       	push	r16
 3fa:	1f 93       	push	r17
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
 400:	8c 01       	movw	r16, r24
 402:	d6 2f       	mov	r29, r22
 404:	88 e7       	ldi	r24, 0x78	; 120
 406:	0e 94 b4 01 	call	0x368	; 0x368 <i2c_start>
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <i2c_byte>
 410:	c0 e0       	ldi	r28, 0x00	; 0
 412:	07 c0       	rjmp	.+14     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 414:	f8 01       	movw	r30, r16
 416:	ec 0f       	add	r30, r28
 418:	f1 1d       	adc	r31, r1
 41a:	80 81       	ld	r24, Z
 41c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <i2c_byte>
 420:	cf 5f       	subi	r28, 0xFF	; 255
 422:	cd 17       	cp	r28, r29
 424:	b8 f3       	brcs	.-18     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 426:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <i2c_stop>
 42a:	df 91       	pop	r29
 42c:	cf 91       	pop	r28
 42e:	1f 91       	pop	r17
 430:	0f 91       	pop	r16
 432:	08 95       	ret

00000434 <lcd_data>:
 434:	ef 92       	push	r14
 436:	ff 92       	push	r15
 438:	0f 93       	push	r16
 43a:	1f 93       	push	r17
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	7c 01       	movw	r14, r24
 442:	8b 01       	movw	r16, r22
 444:	88 e7       	ldi	r24, 0x78	; 120
 446:	0e 94 b4 01 	call	0x368	; 0x368 <i2c_start>
 44a:	80 e4       	ldi	r24, 0x40	; 64
 44c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <i2c_byte>
 450:	c0 e0       	ldi	r28, 0x00	; 0
 452:	d0 e0       	ldi	r29, 0x00	; 0
 454:	07 c0       	rjmp	.+14     	; 0x464 <lcd_data+0x30>
 456:	f7 01       	movw	r30, r14
 458:	ec 0f       	add	r30, r28
 45a:	fd 1f       	adc	r31, r29
 45c:	80 81       	ld	r24, Z
 45e:	0e 94 e5 01 	call	0x3ca	; 0x3ca <i2c_byte>
 462:	21 96       	adiw	r28, 0x01	; 1
 464:	c0 17       	cp	r28, r16
 466:	d1 07       	cpc	r29, r17
 468:	b0 f3       	brcs	.-20     	; 0x456 <lcd_data+0x22>
 46a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <i2c_stop>
 46e:	df 91       	pop	r29
 470:	cf 91       	pop	r28
 472:	1f 91       	pop	r17
 474:	0f 91       	pop	r16
 476:	ff 90       	pop	r15
 478:	ef 90       	pop	r14
 47a:	08 95       	ret

0000047c <lcd_goto_xpix_y>:
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	00 d0       	rcall	.+0      	; 0x482 <lcd_goto_xpix_y+0x6>
 482:	00 d0       	rcall	.+0      	; 0x484 <lcd_goto_xpix_y+0x8>
 484:	cd b7       	in	r28, 0x3d	; 61
 486:	de b7       	in	r29, 0x3e	; 62
 488:	81 38       	cpi	r24, 0x81	; 129
 48a:	90 f4       	brcc	.+36     	; 0x4b0 <lcd_goto_xpix_y+0x34>
 48c:	68 30       	cpi	r22, 0x08	; 8
 48e:	80 f4       	brcc	.+32     	; 0x4b0 <lcd_goto_xpix_y+0x34>
 490:	e2 e2       	ldi	r30, 0x22	; 34
 492:	f1 e0       	ldi	r31, 0x01	; 1
 494:	80 83       	st	Z, r24
 496:	61 83       	std	Z+1, r22	; 0x01
 498:	60 55       	subi	r22, 0x50	; 80
 49a:	69 83       	std	Y+1, r22	; 0x01
 49c:	91 e2       	ldi	r25, 0x21	; 33
 49e:	9a 83       	std	Y+2, r25	; 0x02
 4a0:	8b 83       	std	Y+3, r24	; 0x03
 4a2:	8f e7       	ldi	r24, 0x7F	; 127
 4a4:	8c 83       	std	Y+4, r24	; 0x04
 4a6:	64 e0       	ldi	r22, 0x04	; 4
 4a8:	ce 01       	movw	r24, r28
 4aa:	01 96       	adiw	r24, 0x01	; 1
 4ac:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_command>
 4b0:	0f 90       	pop	r0
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	0f 90       	pop	r0
 4b8:	df 91       	pop	r29
 4ba:	cf 91       	pop	r28
 4bc:	08 95       	ret

000004be <lcd_gotoxy>:
 4be:	98 2f       	mov	r25, r24
 4c0:	99 0f       	add	r25, r25
 4c2:	98 0f       	add	r25, r24
 4c4:	89 2f       	mov	r24, r25
 4c6:	88 0f       	add	r24, r24
 4c8:	0e 94 3e 02 	call	0x47c	; 0x47c <lcd_goto_xpix_y>
 4cc:	08 95       	ret

000004ce <lcd_home>:
 4ce:	60 e0       	ldi	r22, 0x00	; 0
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 4d6:	08 95       	ret

000004d8 <lcd_clrscr>:
 4d8:	1f 93       	push	r17
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	cd b7       	in	r28, 0x3d	; 61
 4e0:	de b7       	in	r29, 0x3e	; 62
 4e2:	c0 58       	subi	r28, 0x80	; 128
 4e4:	d1 09       	sbc	r29, r1
 4e6:	0f b6       	in	r0, 0x3f	; 63
 4e8:	f8 94       	cli
 4ea:	de bf       	out	0x3e, r29	; 62
 4ec:	0f be       	out	0x3f, r0	; 63
 4ee:	cd bf       	out	0x3d, r28	; 61
 4f0:	fe 01       	movw	r30, r28
 4f2:	31 96       	adiw	r30, 0x01	; 1
 4f4:	80 e8       	ldi	r24, 0x80	; 128
 4f6:	df 01       	movw	r26, r30
 4f8:	1d 92       	st	X+, r1
 4fa:	8a 95       	dec	r24
 4fc:	e9 f7       	brne	.-6      	; 0x4f8 <lcd_clrscr+0x20>
 4fe:	10 e0       	ldi	r17, 0x00	; 0
 500:	0b c0       	rjmp	.+22     	; 0x518 <lcd_clrscr+0x40>
 502:	61 2f       	mov	r22, r17
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 50a:	60 e8       	ldi	r22, 0x80	; 128
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	ce 01       	movw	r24, r28
 510:	01 96       	adiw	r24, 0x01	; 1
 512:	0e 94 1a 02 	call	0x434	; 0x434 <lcd_data>
 516:	1f 5f       	subi	r17, 0xFF	; 255
 518:	18 30       	cpi	r17, 0x08	; 8
 51a:	98 f3       	brcs	.-26     	; 0x502 <lcd_clrscr+0x2a>
 51c:	0e 94 67 02 	call	0x4ce	; 0x4ce <lcd_home>
 520:	c0 58       	subi	r28, 0x80	; 128
 522:	df 4f       	sbci	r29, 0xFF	; 255
 524:	0f b6       	in	r0, 0x3f	; 63
 526:	f8 94       	cli
 528:	de bf       	out	0x3e, r29	; 62
 52a:	0f be       	out	0x3f, r0	; 63
 52c:	cd bf       	out	0x3d, r28	; 61
 52e:	df 91       	pop	r29
 530:	cf 91       	pop	r28
 532:	1f 91       	pop	r17
 534:	08 95       	ret

00000536 <lcd_init>:
 536:	1f 93       	push	r17
 538:	cf 93       	push	r28
 53a:	df 93       	push	r29
 53c:	cd b7       	in	r28, 0x3d	; 61
 53e:	de b7       	in	r29, 0x3e	; 62
 540:	6c 97       	sbiw	r28, 0x1c	; 28
 542:	0f b6       	in	r0, 0x3f	; 63
 544:	f8 94       	cli
 546:	de bf       	out	0x3e, r29	; 62
 548:	0f be       	out	0x3f, r0	; 63
 54a:	cd bf       	out	0x3d, r28	; 61
 54c:	18 2f       	mov	r17, r24
 54e:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_init>
 552:	20 e0       	ldi	r18, 0x00	; 0
 554:	0e c0       	rjmp	.+28     	; 0x572 <lcd_init+0x3c>
 556:	82 2f       	mov	r24, r18
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	fc 01       	movw	r30, r24
 55c:	e4 50       	subi	r30, 0x04	; 4
 55e:	fd 4f       	sbci	r31, 0xFD	; 253
 560:	e4 91       	lpm	r30, Z
 562:	a1 e0       	ldi	r26, 0x01	; 1
 564:	b0 e0       	ldi	r27, 0x00	; 0
 566:	ac 0f       	add	r26, r28
 568:	bd 1f       	adc	r27, r29
 56a:	a8 0f       	add	r26, r24
 56c:	b9 1f       	adc	r27, r25
 56e:	ec 93       	st	X, r30
 570:	2f 5f       	subi	r18, 0xFF	; 255
 572:	2b 31       	cpi	r18, 0x1B	; 27
 574:	80 f3       	brcs	.-32     	; 0x556 <lcd_init+0x20>
 576:	1c 8f       	std	Y+28, r17	; 0x1c
 578:	6c e1       	ldi	r22, 0x1C	; 28
 57a:	ce 01       	movw	r24, r28
 57c:	01 96       	adiw	r24, 0x01	; 1
 57e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_command>
 582:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <lcd_clrscr>
 586:	6c 96       	adiw	r28, 0x1c	; 28
 588:	0f b6       	in	r0, 0x3f	; 63
 58a:	f8 94       	cli
 58c:	de bf       	out	0x3e, r29	; 62
 58e:	0f be       	out	0x3f, r0	; 63
 590:	cd bf       	out	0x3d, r28	; 61
 592:	df 91       	pop	r29
 594:	cf 91       	pop	r28
 596:	1f 91       	pop	r17
 598:	08 95       	ret

0000059a <lcd_set_contrast>:
 59a:	cf 93       	push	r28
 59c:	df 93       	push	r29
 59e:	00 d0       	rcall	.+0      	; 0x5a0 <lcd_set_contrast+0x6>
 5a0:	cd b7       	in	r28, 0x3d	; 61
 5a2:	de b7       	in	r29, 0x3e	; 62
 5a4:	91 e8       	ldi	r25, 0x81	; 129
 5a6:	99 83       	std	Y+1, r25	; 0x01
 5a8:	8a 83       	std	Y+2, r24	; 0x02
 5aa:	62 e0       	ldi	r22, 0x02	; 2
 5ac:	ce 01       	movw	r24, r28
 5ae:	01 96       	adiw	r24, 0x01	; 1
 5b0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_command>
 5b4:	0f 90       	pop	r0
 5b6:	0f 90       	pop	r0
 5b8:	df 91       	pop	r29
 5ba:	cf 91       	pop	r28
 5bc:	08 95       	ret

000005be <lcd_putc>:
 5be:	cf 92       	push	r12
 5c0:	df 92       	push	r13
 5c2:	ef 92       	push	r14
 5c4:	ff 92       	push	r15
 5c6:	0f 93       	push	r16
 5c8:	1f 93       	push	r17
 5ca:	cf 93       	push	r28
 5cc:	df 93       	push	r29
 5ce:	cd b7       	in	r28, 0x3d	; 61
 5d0:	de b7       	in	r29, 0x3e	; 62
 5d2:	6c 97       	sbiw	r28, 0x1c	; 28
 5d4:	0f b6       	in	r0, 0x3f	; 63
 5d6:	f8 94       	cli
 5d8:	de bf       	out	0x3e, r29	; 62
 5da:	0f be       	out	0x3f, r0	; 63
 5dc:	cd bf       	out	0x3d, r28	; 61
 5de:	89 30       	cpi	r24, 0x09	; 9
 5e0:	01 f1       	breq	.+64     	; 0x622 <lcd_putc+0x64>
 5e2:	18 f4       	brcc	.+6      	; 0x5ea <lcd_putc+0x2c>
 5e4:	88 30       	cpi	r24, 0x08	; 8
 5e6:	39 f0       	breq	.+14     	; 0x5f6 <lcd_putc+0x38>
 5e8:	52 c0       	rjmp	.+164    	; 0x68e <lcd_putc+0xd0>
 5ea:	8a 30       	cpi	r24, 0x0A	; 10
 5ec:	e9 f1       	breq	.+122    	; 0x668 <lcd_putc+0xaa>
 5ee:	8d 30       	cpi	r24, 0x0D	; 13
 5f0:	09 f4       	brne	.+2      	; 0x5f4 <lcd_putc+0x36>
 5f2:	47 c0       	rjmp	.+142    	; 0x682 <lcd_putc+0xc4>
 5f4:	4c c0       	rjmp	.+152    	; 0x68e <lcd_putc+0xd0>
 5f6:	02 e2       	ldi	r16, 0x22	; 34
 5f8:	11 e0       	ldi	r17, 0x01	; 1
 5fa:	f8 01       	movw	r30, r16
 5fc:	80 81       	ld	r24, Z
 5fe:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 602:	61 81       	ldd	r22, Z+1	; 0x01
 604:	89 1b       	sub	r24, r25
 606:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 60a:	80 e2       	ldi	r24, 0x20	; 32
 60c:	0e 94 df 02 	call	0x5be	; 0x5be <lcd_putc>
 610:	f8 01       	movw	r30, r16
 612:	80 81       	ld	r24, Z
 614:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 618:	61 81       	ldd	r22, Z+1	; 0x01
 61a:	89 1b       	sub	r24, r25
 61c:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 620:	59 c1       	rjmp	.+690    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 622:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 626:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 62a:	29 2f       	mov	r18, r25
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	22 0f       	add	r18, r18
 630:	33 1f       	adc	r19, r19
 632:	22 0f       	add	r18, r18
 634:	33 1f       	adc	r19, r19
 636:	b9 01       	movw	r22, r18
 638:	68 0f       	add	r22, r24
 63a:	71 1d       	adc	r23, r1
 63c:	45 e1       	ldi	r20, 0x15	; 21
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	fa 01       	movw	r30, r20
 642:	e2 1b       	sub	r30, r18
 644:	f3 0b       	sbc	r31, r19
 646:	6e 17       	cp	r22, r30
 648:	7f 07       	cpc	r23, r31
 64a:	40 f4       	brcc	.+16     	; 0x65c <lcd_putc+0x9e>
 64c:	99 0f       	add	r25, r25
 64e:	99 0f       	add	r25, r25
 650:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <__data_end+0x1>
 654:	89 0f       	add	r24, r25
 656:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 65a:	3c c1       	rjmp	.+632    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 65c:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <__data_end+0x1>
 660:	85 e1       	ldi	r24, 0x15	; 21
 662:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 666:	36 c1       	rjmp	.+620    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 668:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <__data_end+0x1>
 66c:	87 30       	cpi	r24, 0x07	; 7
 66e:	08 f0       	brcs	.+2      	; 0x672 <lcd_putc+0xb4>
 670:	31 c1       	rjmp	.+610    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 672:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 676:	68 0f       	add	r22, r24
 678:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 67c:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 680:	29 c1       	rjmp	.+594    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 682:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <__data_end+0x1>
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
 68c:	23 c1       	rjmp	.+582    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 68e:	50 91 22 01 	lds	r21, 0x0122	; 0x800122 <__data_end>
 692:	5a 37       	cpi	r21, 0x7A	; 122
 694:	08 f0       	brcs	.+2      	; 0x698 <lcd_putc+0xda>
 696:	1e c1       	rjmp	.+572    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 698:	80 32       	cpi	r24, 0x20	; 32
 69a:	08 f4       	brcc	.+2      	; 0x69e <lcd_putc+0xe0>
 69c:	1b c1       	rjmp	.+566    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 69e:	80 52       	subi	r24, 0x20	; 32
 6a0:	e9 e6       	ldi	r30, 0x69	; 105
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	e4 91       	lpm	r30, Z
 6a6:	8e 17       	cp	r24, r30
 6a8:	98 f4       	brcc	.+38     	; 0x6d0 <lcd_putc+0x112>
 6aa:	23 c0       	rjmp	.+70     	; 0x6f2 <lcd_putc+0x134>
 6ac:	f9 01       	movw	r30, r18
 6ae:	ee 0f       	add	r30, r30
 6b0:	ff 1f       	adc	r31, r31
 6b2:	e8 59       	subi	r30, 0x98	; 152
 6b4:	ff 4f       	sbci	r31, 0xFF	; 255
 6b6:	e4 91       	lpm	r30, Z
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	b0 97       	sbiw	r30, 0x20	; 32
 6bc:	28 2f       	mov	r18, r24
 6be:	30 e0       	ldi	r19, 0x00	; 0
 6c0:	e2 17       	cp	r30, r18
 6c2:	f3 07       	cpc	r31, r19
 6c4:	19 f4       	brne	.+6      	; 0x6cc <lcd_putc+0x10e>
 6c6:	fb 01       	movw	r30, r22
 6c8:	84 91       	lpm	r24, Z
 6ca:	10 c0       	rjmp	.+32     	; 0x6ec <lcd_putc+0x12e>
 6cc:	9f 5f       	subi	r25, 0xFF	; 255
 6ce:	01 c0       	rjmp	.+2      	; 0x6d2 <lcd_putc+0x114>
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	29 2f       	mov	r18, r25
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	f9 01       	movw	r30, r18
 6d8:	ee 0f       	add	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	bf 01       	movw	r22, r30
 6de:	67 59       	subi	r22, 0x97	; 151
 6e0:	7f 4f       	sbci	r23, 0xFF	; 255
 6e2:	fb 01       	movw	r30, r22
 6e4:	44 91       	lpm	r20, Z
 6e6:	4f 3f       	cpi	r20, 0xFF	; 255
 6e8:	09 f7       	brne	.-62     	; 0x6ac <lcd_putc+0xee>
 6ea:	8f ef       	ldi	r24, 0xFF	; 255
 6ec:	8f 3f       	cpi	r24, 0xFF	; 255
 6ee:	09 f4       	brne	.+2      	; 0x6f2 <lcd_putc+0x134>
 6f0:	f1 c0       	rjmp	.+482    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 6f2:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6f6:	92 30       	cpi	r25, 0x02	; 2
 6f8:	09 f0       	breq	.+2      	; 0x6fc <lcd_putc+0x13e>
 6fa:	be c0       	rjmp	.+380    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 6fc:	25 2f       	mov	r18, r21
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	24 5f       	subi	r18, 0xF4	; 244
 702:	3f 4f       	sbci	r19, 0xFF	; 255
 704:	21 38       	cpi	r18, 0x81	; 129
 706:	31 05       	cpc	r19, r1
 708:	08 f0       	brcs	.+2      	; 0x70c <lcd_putc+0x14e>
 70a:	e4 c0       	rjmp	.+456    	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 70c:	f1 2c       	mov	r15, r1
 70e:	4f c0       	rjmp	.+158    	; 0x7ae <lcd_putc+0x1f0>
 710:	6f 2d       	mov	r22, r15
 712:	70 e0       	ldi	r23, 0x00	; 0
 714:	fb 01       	movw	r30, r22
 716:	ee 0f       	add	r30, r30
 718:	ff 1f       	adc	r31, r31
 71a:	21 e0       	ldi	r18, 0x01	; 1
 71c:	30 e0       	ldi	r19, 0x00	; 0
 71e:	2c 0f       	add	r18, r28
 720:	3d 1f       	adc	r19, r29
 722:	e2 0f       	add	r30, r18
 724:	f3 1f       	adc	r31, r19
 726:	15 86       	std	Z+13, r1	; 0x0d
 728:	14 86       	std	Z+12, r1	; 0x0c
 72a:	28 2f       	mov	r18, r24
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	f9 01       	movw	r30, r18
 730:	ee 0f       	add	r30, r30
 732:	ff 1f       	adc	r31, r31
 734:	e2 0f       	add	r30, r18
 736:	f3 1f       	adc	r31, r19
 738:	ee 0f       	add	r30, r30
 73a:	ff 1f       	adc	r31, r31
 73c:	e6 0f       	add	r30, r22
 73e:	f7 1f       	adc	r31, r23
 740:	e0 58       	subi	r30, 0x80	; 128
 742:	ff 4f       	sbci	r31, 0xFF	; 255
 744:	e4 90       	lpm	r14, Z
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	2f c0       	rjmp	.+94     	; 0x7a8 <lcd_putc+0x1ea>
 74a:	a9 2f       	mov	r26, r25
 74c:	b0 e0       	ldi	r27, 0x00	; 0
 74e:	2e 2d       	mov	r18, r14
 750:	30 e0       	ldi	r19, 0x00	; 0
 752:	09 2e       	mov	r0, r25
 754:	02 c0       	rjmp	.+4      	; 0x75a <lcd_putc+0x19c>
 756:	35 95       	asr	r19
 758:	27 95       	ror	r18
 75a:	0a 94       	dec	r0
 75c:	e2 f7       	brpl	.-8      	; 0x756 <lcd_putc+0x198>
 75e:	20 ff       	sbrs	r18, 0
 760:	22 c0       	rjmp	.+68     	; 0x7a6 <lcd_putc+0x1e8>
 762:	aa 0f       	add	r26, r26
 764:	bb 1f       	adc	r27, r27
 766:	21 e0       	ldi	r18, 0x01	; 1
 768:	30 e0       	ldi	r19, 0x00	; 0
 76a:	69 01       	movw	r12, r18
 76c:	0a 2e       	mov	r0, r26
 76e:	02 c0       	rjmp	.+4      	; 0x774 <lcd_putc+0x1b6>
 770:	cc 0c       	add	r12, r12
 772:	dd 1c       	adc	r13, r13
 774:	0a 94       	dec	r0
 776:	e2 f7       	brpl	.-8      	; 0x770 <lcd_putc+0x1b2>
 778:	8b 01       	movw	r16, r22
 77a:	00 0f       	add	r16, r16
 77c:	11 1f       	adc	r17, r17
 77e:	e1 e0       	ldi	r30, 0x01	; 1
 780:	f0 e0       	ldi	r31, 0x00	; 0
 782:	ec 0f       	add	r30, r28
 784:	fd 1f       	adc	r31, r29
 786:	e0 0f       	add	r30, r16
 788:	f1 1f       	adc	r31, r17
 78a:	44 85       	ldd	r20, Z+12	; 0x0c
 78c:	55 85       	ldd	r21, Z+13	; 0x0d
 78e:	4c 29       	or	r20, r12
 790:	5d 29       	or	r21, r13
 792:	11 96       	adiw	r26, 0x01	; 1
 794:	02 c0       	rjmp	.+4      	; 0x79a <lcd_putc+0x1dc>
 796:	22 0f       	add	r18, r18
 798:	33 1f       	adc	r19, r19
 79a:	aa 95       	dec	r26
 79c:	e2 f7       	brpl	.-8      	; 0x796 <lcd_putc+0x1d8>
 79e:	24 2b       	or	r18, r20
 7a0:	35 2b       	or	r19, r21
 7a2:	35 87       	std	Z+13, r19	; 0x0d
 7a4:	24 87       	std	Z+12, r18	; 0x0c
 7a6:	9f 5f       	subi	r25, 0xFF	; 255
 7a8:	98 30       	cpi	r25, 0x08	; 8
 7aa:	78 f2       	brcs	.-98     	; 0x74a <lcd_putc+0x18c>
 7ac:	f3 94       	inc	r15
 7ae:	35 e0       	ldi	r19, 0x05	; 5
 7b0:	3f 15       	cp	r19, r15
 7b2:	08 f0       	brcs	.+2      	; 0x7b6 <lcd_putc+0x1f8>
 7b4:	ad cf       	rjmp	.-166    	; 0x710 <lcd_putc+0x152>
 7b6:	20 e0       	ldi	r18, 0x00	; 0
 7b8:	15 c0       	rjmp	.+42     	; 0x7e4 <lcd_putc+0x226>
 7ba:	82 2f       	mov	r24, r18
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	88 0f       	add	r24, r24
 7c0:	99 1f       	adc	r25, r25
 7c2:	e1 e0       	ldi	r30, 0x01	; 1
 7c4:	f0 e0       	ldi	r31, 0x00	; 0
 7c6:	ec 0f       	add	r30, r28
 7c8:	fd 1f       	adc	r31, r29
 7ca:	e8 0f       	add	r30, r24
 7cc:	f9 1f       	adc	r31, r25
 7ce:	34 85       	ldd	r19, Z+12	; 0x0c
 7d0:	30 83       	st	Z, r19
 7d2:	01 96       	adiw	r24, 0x01	; 1
 7d4:	e1 e0       	ldi	r30, 0x01	; 1
 7d6:	f0 e0       	ldi	r31, 0x00	; 0
 7d8:	ec 0f       	add	r30, r28
 7da:	fd 1f       	adc	r31, r29
 7dc:	e8 0f       	add	r30, r24
 7de:	f9 1f       	adc	r31, r25
 7e0:	30 83       	st	Z, r19
 7e2:	2f 5f       	subi	r18, 0xFF	; 255
 7e4:	26 30       	cpi	r18, 0x06	; 6
 7e6:	48 f3       	brcs	.-46     	; 0x7ba <lcd_putc+0x1fc>
 7e8:	6c e0       	ldi	r22, 0x0C	; 12
 7ea:	70 e0       	ldi	r23, 0x00	; 0
 7ec:	ce 01       	movw	r24, r28
 7ee:	01 96       	adiw	r24, 0x01	; 1
 7f0:	0e 94 1a 02 	call	0x434	; 0x434 <lcd_data>
 7f4:	e2 e2       	ldi	r30, 0x22	; 34
 7f6:	f1 e0       	ldi	r31, 0x01	; 1
 7f8:	81 81       	ldd	r24, Z+1	; 0x01
 7fa:	8f 54       	subi	r24, 0x4F	; 79
 7fc:	89 8f       	std	Y+25, r24	; 0x19
 7fe:	81 e2       	ldi	r24, 0x21	; 33
 800:	8a 8f       	std	Y+26, r24	; 0x1a
 802:	80 81       	ld	r24, Z
 804:	8b 8f       	std	Y+27, r24	; 0x1b
 806:	8f e7       	ldi	r24, 0x7F	; 127
 808:	8c 8f       	std	Y+28, r24	; 0x1c
 80a:	64 e0       	ldi	r22, 0x04	; 4
 80c:	ce 01       	movw	r24, r28
 80e:	49 96       	adiw	r24, 0x19	; 25
 810:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_command>
 814:	20 e0       	ldi	r18, 0x00	; 0
 816:	15 c0       	rjmp	.+42     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 818:	82 2f       	mov	r24, r18
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	88 0f       	add	r24, r24
 81e:	99 1f       	adc	r25, r25
 820:	e1 e0       	ldi	r30, 0x01	; 1
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	ec 0f       	add	r30, r28
 826:	fd 1f       	adc	r31, r29
 828:	e8 0f       	add	r30, r24
 82a:	f9 1f       	adc	r31, r25
 82c:	35 85       	ldd	r19, Z+13	; 0x0d
 82e:	30 83       	st	Z, r19
 830:	01 96       	adiw	r24, 0x01	; 1
 832:	e1 e0       	ldi	r30, 0x01	; 1
 834:	f0 e0       	ldi	r31, 0x00	; 0
 836:	ec 0f       	add	r30, r28
 838:	fd 1f       	adc	r31, r29
 83a:	e8 0f       	add	r30, r24
 83c:	f9 1f       	adc	r31, r25
 83e:	30 83       	st	Z, r19
 840:	2f 5f       	subi	r18, 0xFF	; 255
 842:	26 30       	cpi	r18, 0x06	; 6
 844:	48 f3       	brcs	.-46     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 846:	6c e0       	ldi	r22, 0x0C	; 12
 848:	70 e0       	ldi	r23, 0x00	; 0
 84a:	ce 01       	movw	r24, r28
 84c:	01 96       	adiw	r24, 0x01	; 1
 84e:	0e 94 1a 02 	call	0x434	; 0x434 <lcd_data>
 852:	02 e2       	ldi	r16, 0x22	; 34
 854:	11 e0       	ldi	r17, 0x01	; 1
 856:	f8 01       	movw	r30, r16
 858:	81 81       	ldd	r24, Z+1	; 0x01
 85a:	80 55       	subi	r24, 0x50	; 80
 85c:	89 8f       	std	Y+25, r24	; 0x19
 85e:	80 81       	ld	r24, Z
 860:	84 5f       	subi	r24, 0xF4	; 244
 862:	8b 8f       	std	Y+27, r24	; 0x1b
 864:	64 e0       	ldi	r22, 0x04	; 4
 866:	ce 01       	movw	r24, r28
 868:	49 96       	adiw	r24, 0x19	; 25
 86a:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_command>
 86e:	f8 01       	movw	r30, r16
 870:	80 81       	ld	r24, Z
 872:	84 5f       	subi	r24, 0xF4	; 244
 874:	80 83       	st	Z, r24
 876:	2e c0       	rjmp	.+92     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 878:	25 2f       	mov	r18, r21
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	2a 5f       	subi	r18, 0xFA	; 250
 87e:	3f 4f       	sbci	r19, 0xFF	; 255
 880:	21 38       	cpi	r18, 0x81	; 129
 882:	31 05       	cpc	r19, r1
 884:	38 f5       	brcc	.+78     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	18 c0       	rjmp	.+48     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 88a:	28 2f       	mov	r18, r24
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	49 2f       	mov	r20, r25
 890:	50 e0       	ldi	r21, 0x00	; 0
 892:	f9 01       	movw	r30, r18
 894:	ee 0f       	add	r30, r30
 896:	ff 1f       	adc	r31, r31
 898:	e2 0f       	add	r30, r18
 89a:	f3 1f       	adc	r31, r19
 89c:	ee 0f       	add	r30, r30
 89e:	ff 1f       	adc	r31, r31
 8a0:	e4 0f       	add	r30, r20
 8a2:	f5 1f       	adc	r31, r21
 8a4:	e0 58       	subi	r30, 0x80	; 128
 8a6:	ff 4f       	sbci	r31, 0xFF	; 255
 8a8:	e4 91       	lpm	r30, Z
 8aa:	a1 e0       	ldi	r26, 0x01	; 1
 8ac:	b0 e0       	ldi	r27, 0x00	; 0
 8ae:	ac 0f       	add	r26, r28
 8b0:	bd 1f       	adc	r27, r29
 8b2:	a4 0f       	add	r26, r20
 8b4:	b5 1f       	adc	r27, r21
 8b6:	ec 93       	st	X, r30
 8b8:	9f 5f       	subi	r25, 0xFF	; 255
 8ba:	96 30       	cpi	r25, 0x06	; 6
 8bc:	30 f3       	brcs	.-52     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 8be:	66 e0       	ldi	r22, 0x06	; 6
 8c0:	70 e0       	ldi	r23, 0x00	; 0
 8c2:	ce 01       	movw	r24, r28
 8c4:	01 96       	adiw	r24, 0x01	; 1
 8c6:	0e 94 1a 02 	call	0x434	; 0x434 <lcd_data>
 8ca:	e2 e2       	ldi	r30, 0x22	; 34
 8cc:	f1 e0       	ldi	r31, 0x01	; 1
 8ce:	80 81       	ld	r24, Z
 8d0:	8a 5f       	subi	r24, 0xFA	; 250
 8d2:	80 83       	st	Z, r24
 8d4:	6c 96       	adiw	r28, 0x1c	; 28
 8d6:	0f b6       	in	r0, 0x3f	; 63
 8d8:	f8 94       	cli
 8da:	de bf       	out	0x3e, r29	; 62
 8dc:	0f be       	out	0x3f, r0	; 63
 8de:	cd bf       	out	0x3d, r28	; 61
 8e0:	df 91       	pop	r29
 8e2:	cf 91       	pop	r28
 8e4:	1f 91       	pop	r17
 8e6:	0f 91       	pop	r16
 8e8:	ff 90       	pop	r15
 8ea:	ef 90       	pop	r14
 8ec:	df 90       	pop	r13
 8ee:	cf 90       	pop	r12
 8f0:	08 95       	ret

000008f2 <lcd_charMode>:
 8f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 8f6:	08 95       	ret

000008f8 <lcd_puts>:
void lcd_puts(const char* s){
 8f8:	cf 93       	push	r28
 8fa:	df 93       	push	r29
 8fc:	ec 01       	movw	r28, r24
    while (*s) {
 8fe:	03 c0       	rjmp	.+6      	; 0x906 <__stack+0x7>
        lcd_putc(*s++);
 900:	21 96       	adiw	r28, 0x01	; 1
 902:	0e 94 df 02 	call	0x5be	; 0x5be <lcd_putc>
			// do nothing
			break;
	}
}
void lcd_puts(const char* s){
    while (*s) {
 906:	88 81       	ld	r24, Y
 908:	81 11       	cpse	r24, r1
 90a:	fa cf       	rjmp	.-12     	; 0x900 <__stack+0x1>
        lcd_putc(*s++);
    }
}
 90c:	df 91       	pop	r29
 90e:	cf 91       	pop	r28
 910:	08 95       	ret

00000912 <main>:
//****main.c****//
#include "lcd.h"

int main(void){
	
	lcd_init(LCD_DISP_ON);
 912:	8f ea       	ldi	r24, 0xAF	; 175
 914:	0e 94 9b 02 	call	0x536	; 0x536 <lcd_init>
	lcd_clrscr();
 918:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <lcd_clrscr>
	lcd_set_contrast(0x00);
 91c:	80 e0       	ldi	r24, 0x00	; 0
 91e:	0e 94 cd 02 	call	0x59a	; 0x59a <lcd_set_contrast>
	lcd_gotoxy(4,1);
 922:	61 e0       	ldi	r22, 0x01	; 1
 924:	84 e0       	ldi	r24, 0x04	; 4
 926:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
	lcd_puts("Normal Size");
 92a:	81 e0       	ldi	r24, 0x01	; 1
 92c:	91 e0       	ldi	r25, 0x01	; 1
 92e:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <lcd_puts>
	lcd_charMode(DOUBLESIZE);
 932:	82 e0       	ldi	r24, 0x02	; 2
 934:	0e 94 79 04 	call	0x8f2	; 0x8f2 <lcd_charMode>
	lcd_gotoxy(0,4);
 938:	64 e0       	ldi	r22, 0x04	; 4
 93a:	80 e0       	ldi	r24, 0x00	; 0
 93c:	0e 94 5f 02 	call	0x4be	; 0x4be <lcd_gotoxy>
	lcd_puts("  Double  \r\n   Size");
 940:	8d e0       	ldi	r24, 0x0D	; 13
 942:	91 e0       	ldi	r25, 0x01	; 1
 944:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <lcd_puts>
	lcd_charMode(NORMALSIZE);
 948:	81 e0       	ldi	r24, 0x01	; 1
 94a:	0e 94 79 04 	call	0x8f2	; 0x8f2 <lcd_charMode>
 94e:	ff cf       	rjmp	.-2      	; 0x94e <main+0x3c>

00000950 <_exit>:
 950:	f8 94       	cli

00000952 <__stop_program>:
 952:	ff cf       	rjmp	.-2      	; 0x952 <__stop_program>
